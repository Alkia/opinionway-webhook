# Create a virtual environment:
python3 -m venv venv

# Activate the virtual environment:
source venv/bin/activate

# Install the dependencies:
pip install -r requirements.txt

sudo apt install git-credential-manager-core
git config --global credential.helper manager-core
git config --global credential.helper cache

# Example for PyTorch
pip install torch torchvision torchaudio

# Example for TensorFlow
pip install tensorflow

# Example for Flax (if required)
pip install flax

pip uninstall tensorflow
pip install tensorflow-cpu

pip install --upgrade transformers
pip install --upgrade tensorflow

pip install tf-keras

# To test the /opinionway endpoint of your Flask app automatically, you can create a test script (test.py) and also use a curl command for manual testing. Here's how to implement both:
# curl Command for Manual Testing
curl -X POST http://localhost:8888/opinionway \
     -H "Content-Type: application/json" \
     -d '{
          "transcript": "This is a great product!",
          "uid": "12345"
        }'


curl -X POST http://142.93.211.128:8888/opinionway \
     -H "Content-Type: application/json" \
     -d '{
          "transcript": "This is a great product!",
          "uid": "12345"
        }'

http://omi.a13z.org:8888/

curl -X POST http://o.a13z.org:8888/opinionway?uid=user123 \
     -H "Content-Type: application/json" \
     -d '{
          "transcript": "This is a great product!",
          "uid": "12345"
        }'

curl -X POST http://o.a13z.org:8888/opinionway?uid=user123 \
     -H "Content-Type: application/json" \
     -d '{
           "id": 0,
           "created_at": "2024-07-22T23:59:45.910559+00:00",
           "started_at": "2024-07-21T22:34:43.384323+00:00",
           "finished_at": "2024-07-21T22:35:43.384323+00:00",
           "transcript": "Full transcript text...",
           "transcript_segments": [
             {
               "text": "Segment text",
               "speaker": "SPEAKER_00",
               "speakerId": 0,
               "is_user": false,
               "start": 10.0,
               "end": 20.0
             }
           ],
           "photos": [],
           "structured": {
             "title": "Conversation Title",
             "overview": "Brief overview...",
             "emoji": "üó£Ô∏è",
             "category": "personal",
             "action_items": [
               {
                 "description": "Action item description",
                 "completed": false
               }
             ],
             "events": []
           },
           "apps_response": [
             {
               "app_id": "app-id",
               "content": "App response content"
             }
           ],
           "discarded": false
         }'
